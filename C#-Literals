// C# program to illustrate the use of Integer Literals
using System;
 
class DemoTMT {
 
    // Main method
    public static void Main(String[] args)
    { 
       
        // decimal-form literal
        int a = 2212;
 
        // octal-form literal
        int b = 0029;
 
        // Hexa-decimal form literal
        int c = 0xFace;
       
        // binary-form literal
        int x = 0b101;
         
        Console.WriteLine(a);
        Console.WriteLine(b);
        Console.WriteLine(c);
        Console.WriteLine(x);
    }
}


// C# program to illustrate the use of
// floating-point literals
using System;
 
class DemoTMT {
 
    // Main Method
    public static void Main(String[] args)
    {
        // decimal-form literal
        double a = 101.230;
 
        // It also acts as decimal literal
        double b = 0123.222;
 
        Console.WriteLine(a);
        Console.WriteLine(b);
    }
}



using System;
 
class DemoTMT {
 
    // Main Method
    public static void Main(String[] args)
    {
 
        // character literal within single quote
        char ch = 'a';
 
        // Unicode representation
        char c = '\u0061';
 
        Console.WriteLine(ch);
        Console.WriteLine(c);
 
        // Escape character literal
        Console.WriteLine("Hello\n\nTMT\t!");
    }
}




// C#  program to illustrate the use of String literals
using System;
 
class DemoTMT {
 
    // Main Method
    public static void Main(String[] args)
    {
 
        String s = "Hello C#!";
        String s2 = @"Hello C#!";
 
        // If we assign without "" then it
        // treats as a variable
        // and causes compiler error
        // String s1 = C#;
 
        Console.WriteLine(s);
        Console.WriteLine(s2);
    }
}
