using System; 
namespace ValueTypeTest { 
      
class DemoTMT { 
      
    // Main function 
    static void Main() 
    { 
        // declaring character 
        char a = 'A'; 
  
        // Integer data type is generally 
        int i = 22; 
  
        short s = 12; 
          
        // is larger- than short range 
        // short s1 = 29092212; 
  
        // long uses Integer values which  
        // may signed or unsigned 
        long l = 2212; 
  
        // UInt data type is generally 
        // used for unsigned integer values 
        uint ui = 12; 
  
        ushort us = 29; 
        // this will give error as number is 
        // larger than short range 
  
        // ulong data type is generally 
        // used for unsigned integer values 
        ulong ul = 22121994; 
  
        // by default fraction value 
        // is double in C# 
        double d = 29.221294; 
  
        // for float use 'f' as suffix 
        float f = 2.9221294f; 
  
        // for float use 'm' as suffix 
        decimal dec = 221.2m; 
  
        Console.WriteLine("char: " + a); 
        Console.WriteLine("integer: " + i); 
        Console.WriteLine("short: " + s); 
        Console.WriteLine("long: " + l); 
        Console.WriteLine("float: " + f); 
        Console.WriteLine("double: " + d); 
        Console.WriteLine("decimal: " + dec); 
        Console.WriteLine("Unsinged integer: " + ui); 
        Console.WriteLine("Unsinged short: " + us); 
        Console.WriteLine("Unsinged long: " + ul); 
    } 
} 
} 


//Boolean
// C# program to demonstrate the 
// boolean data type 
using System; 
namespace ValueTypeTest { 
      
    class DemoTMT { 
          
    // Main function 
    static void Main()  
    { 
          
        // boolean data type 
        bool b = true;      
        if (b == true) 
            Console.WriteLine("Hi TMT"); 
    }  
} 
}




//Reference Data Types
using System; 
namespace ValueTypeTest { 
      
class DemoTMT { 
      
    // Main Function 
    static void Main()  
    { 
          
        // declaring string 
        string a = "TMT";  
          
        //append in a 
        a+="for"; 
        a = a+"TMT";  
        Console.WriteLine(a); 
          
        // declare object obj 
        object obj; 
        obj = 22; 
        Console.WriteLine(obj); 
          
        // to show type of object 
        // using GetType() 
        Console.WriteLine(obj.GetType());  
    }  
} 
}


// Pointer Data Type
//note: Click R Project/Properties/Build allow unsafe code
namespace PointerProgram
{
    // class declaration
    class Program
    {
        // Main Method
        static void Main(string[] args)
        {
            unsafe
            {
                int n = 10;
                int* p = &n;
                Console.WriteLine("Du lieu: " + n);
                Console.WriteLine("Du lieu: " + p->ToString());
                Console.WriteLine("Dia chi: " + (int)p);
            }

            Console.ReadKey();
        }
    }
}

//Program swap
using System;

namespace PointerProgram
{
    class DemoTMT
    {
        public unsafe void swap(int* p, int* q)
        {
            int temp = *p;
            *p = *q;
            *q = temp;
        }

        public unsafe static void Main()
        {
            Console.WriteLine("Unsafe code trong C#");
            Console.WriteLine("Truyen con tro nhu la tham so");
            Console.WriteLine("-----------------------------------");
            DemoTMT p = new DemoTMT();
            int var1 = 29;
            int var2 = 22;
            int* x = &var1;
            int* y = &var2;

            Console.WriteLine("Truoc khi trao doi: var1 = {0}, var2 = {1}", var1, var2);
            p.swap(x, y);

            Console.WriteLine("Sau khi trao doi: var1 = {0}, var2 = {1}", var1, var2);
            Console.ReadKey();
        }
    }
}
